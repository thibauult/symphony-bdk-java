plugins {
    id 'java-platform'
    id 'maven-publish'
    id 'signing'
}

description = 'Symphony Java BDK Bom (Bill Of Materials)'

javaPlatform {
    allowDependencies()
}

repositories {
    mavenCentral()
}

dependencies {
    // import Spring Boot's BOM
    api platform('org.springframework.boot:spring-boot-dependencies:2.5.5')
    // import Jackson's BOM
    api platform('com.fasterxml.jackson:jackson-bom:2.12.5')
    // define all our dependencies versions
    constraints {
        // Internal modules dependencies (Keep them first)
        api "org.finos.symphony.bdk:symphony-bdk-core:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-api:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-jersey2:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-webclient:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-core-spring-boot-starter:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-app-spring-boot-starter:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-api:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-freemarker:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-handlebars:$project.version"

        // External dependencies
        api 'org.projectlombok:lombok:1.18.20'

        api 'org.apiguardian:apiguardian-api:1.1.0'

        api 'org.slf4j:slf4j-api:1.7.32'
        api 'org.slf4j:slf4j-log4j12:1.7.32'

        api 'commons-io:commons-io:2.11.0'
        api 'commons-codec:commons-codec:1.15'
        api 'commons-beanutils:commons-beanutils:1.9.4'
        api 'org.apache.commons:commons-lang3:3.12.0'
        api 'org.apache.commons:commons-text:1.9'
        api 'commons-logging:commons-logging:1.2'
        api 'com.brsanthu:migbase64:2.2'
        api 'io.jsonwebtoken:jjwt:0.9.1'
        api 'org.bouncycastle:bcpkix-jdk15on:1.69'
        api 'com.google.code.findbugs:jsr305:3.0.2'

        api 'io.github.resilience4j:resilience4j-retry:1.7.1'

        api 'io.swagger:swagger-annotations:1.6.0'
        api 'org.openapitools:jackson-databind-nullable:0.2.1'

        api 'org.glassfish.jersey.core:jersey-client:2.35'
        api 'org.glassfish.jersey.core:jersey-common:2.35'
        api 'org.glassfish.jersey.inject:jersey-hk2:2.35'
        api 'org.glassfish.jersey.media:jersey-media-multipart:2.35'
        api 'org.glassfish.jersey.media:jersey-media-json-jackson:2.35'
        api 'org.glassfish.jersey.connectors:jersey-apache-connector:2.35'
        api 'org.glassfish.jersey.ext:jersey-entity-filtering:2.35'

        api 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

        api 'org.freemarker:freemarker:2.3.31'
        api 'com.github.jknack:handlebars:4.2.0'
        api 'org.reflections:reflections:0.9.12'

        api 'org.junit.jupiter:junit-jupiter:5.8.0'
        api 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
        api 'ch.qos.logback:logback-classic:1.2.3'
        api 'com.tngtech.archunit:archunit-junit5:0.21.0'
        api 'org.mock-server:mockserver-netty:5.11.2'
        api 'org.mockito:mockito-core:3.12.4'
        api 'org.mockito:mockito-junit-jupiter:3.12.4'
        api 'org.assertj:assertj-core:3.20.2'
    }
}

publishing {
    publications {
        bom(MavenPublication) {
            from components.javaPlatform
            pom(rootProject.ext.pomDefinition)
            pom {
                name = project.name
                description = project.description
            }
        }
    }

    repositories {
        maven {
            credentials {
                username rootProject.ext.mavenRepoUsername
                password rootProject.ext.mavenRepoPassword
            }
            url rootProject.ext.mavenRepoUrl
        }
    }
}

signing {
    required { rootProject.isReleaseVersion }
    sign publishing.publications.bom
}
