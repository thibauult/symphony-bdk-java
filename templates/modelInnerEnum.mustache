    /**
     * {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
     */
    {{>additionalEnumTypeAnnotations}}public enum {{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}} {
        {{#allowableValues}}
        {{#enumVars}}
        {{#enumDescription}}
        /**
        * {{.}}
        */
        {{/enumDescription}}
        {{{name}}}({{{value}}}){{^-last}},
        {{/-last}}{{#-last}};{{/-last}}
        {{/enumVars}}
        {{/allowableValues}}

        private final {{{dataType}}} value;

        {{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}({{{dataType}}} value) {
            this.value = value;
        }

        {{#jackson}}
        @JsonValue
        {{/jackson}}
        public {{{dataType}}} getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        {{#jackson}}
        @JsonCreator
        {{/jackson}}
        public static {{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}} fromValue({{{dataType}}} value) {
            for ({{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}} b : {{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}}.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }

            org.slf4j.LoggerFactory.getLogger({{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}.class).warn("Unexpected value '" + value + "', returning null.");
            return null;
        }
    }
